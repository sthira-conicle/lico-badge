{"ast":null,"code":"import * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nexport default {\n  name: \"ThreeModelViewer\",\n  data() {\n    return {\n      threejs: null,\n      scene: null,\n      camera: null,\n      mixers: [],\n      action: [],\n      playing: 0,\n      headAction: [0],\n      neckBone: null,\n      mouse: new THREE.Vector2(),\n      rafId: null\n    };\n  },\n  methods: {\n    initialize() {\n      // Create renderer\n      this.threejs = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.threejs.shadowMap.enabled = true;\n      this.threejs.shadowMap.type = THREE.PCFSoftShadowMap;\n      this.threejs.setPixelRatio(window.devicePixelRatio);\n      this.threejs.setSize(window.innerWidth, window.innerHeight);\n\n      // Attach renderer to DOM\n      this.$refs.threeContainer.appendChild(this.threejs.domElement);\n\n      // Camera setup\n      const fov = 50;\n      const aspect = window.innerWidth / window.innerHeight;\n      const near = 1;\n      const far = 1000.0;\n      this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n      this.camera.position.set(0, 0.5, 2.3);\n      this.camera.lookAt(new THREE.Vector3(0, 0.6, 0));\n\n      // Scene setup\n      this.scene = new THREE.Scene();\n\n      // Lights\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 4.0);\n      directionalLight.position.set(5, 10, 7.5);\n      directionalLight.castShadow = true;\n      this.scene.add(directionalLight);\n      const ambientLight = new THREE.AmbientLight(0x846e62, 5.0);\n      this.scene.add(ambientLight);\n\n      // Resize listener\n      window.addEventListener(\"resize\", this.onWindowResize, false);\n\n      // Load model\n      this.loadModel();\n\n      // Mouse move listener\n      this.threejs.domElement.addEventListener(\"mousemove\", this.onMouseMove, false);\n\n      // Start render loop\n      this.raf();\n    },\n    loadModel() {\n      const loader = new GLTFLoader();\n      console.log(loader);\n      loader.load(\"/lico-actions-subd.glb\", gltf => {\n        gltf.scene.traverse(c => {\n          if (c.material) {\n            c.material.side = THREE.FrontSide;\n            c.material.depthWrite = true;\n          }\n          c.castShadow = c.name !== \"floor\";\n        });\n\n        // this.headAction.forEach((i) => {\n        //   const idsToRemove = [];\n        //   gltf.animations[i].tracks.forEach((t, j) => {\n        //     if (t.name.includes(\"mixamorigHead.quaternion\")) {\n        //       idsToRemove.push(j);\n        //     }\n        //   });\n        //   idsToRemove.forEach((j) => {\n        //     gltf.animations[i].tracks.splice(j, 1);\n        //   });\n        // });\n\n        // const mixer = new THREE.AnimationMixer(gltf.scene);\n        // this.mixers.push(mixer);\n        // gltf.animations.forEach((element, i) => {\n        //   this.action[i] = mixer.clipAction(element);\n        // });\n        // this.action[0].play();\n        // this.playing = 0;\n\n        this.scene.add(gltf.scene);\n        this.neckBone = gltf.scene.getObjectByName(\"mixamorigHead\");\n      });\n    },\n    onMouseMove(event) {\n      // if (this.headAction.includes(this.playing)) {\n      this.mouse.set(event.clientX / event.currentTarget.clientWidth * 2 - 1, -(event.clientY / event.currentTarget.clientHeight) * 2 + 1);\n      if (this.neckBone) {\n        this.neckBone.lookAt(this.mouse.x / 2, (this.mouse.y + 0.8) / 2, 1);\n      }\n      // }\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.threejs.setSize(window.innerWidth, window.innerHeight);\n    },\n    // raf() {\n    //   this.rafId = requestAnimationFrame((t) => {\n    //     this.raf();\n    //     if (this.mixers) {\n    //       const delta = t * 0.001;\n    //       this.mixers.forEach((mixer) => mixer.update(delta));\n    //     }\n    //     this.threejs.render(this.scene, this.camera);\n    //   });\n    // },\n    cleanup() {\n      // cancelAnimationFrame(this.rafId);\n      window.removeEventListener(\"resize\", this.onWindowResize);\n      this.threejs.domElement.removeEventListener(\"mousemove\", this.onMouseMove);\n      this.threejs.dispose();\n      this.scene = null;\n      this.camera = null;\n      this.mixers = [];\n    }\n  },\n  mounted() {\n    this.initialize();\n  },\n  beforeUnmount() {\n    this.cleanup();\n  }\n};","map":{"version":3,"names":["THREE","GLTFLoader","name","data","threejs","scene","camera","mixers","action","playing","headAction","neckBone","mouse","Vector2","rafId","methods","initialize","WebGLRenderer","antialias","shadowMap","enabled","type","PCFSoftShadowMap","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","$refs","threeContainer","appendChild","domElement","fov","aspect","near","far","PerspectiveCamera","position","set","lookAt","Vector3","Scene","directionalLight","DirectionalLight","castShadow","add","ambientLight","AmbientLight","addEventListener","onWindowResize","loadModel","onMouseMove","raf","loader","console","log","load","gltf","traverse","c","material","side","FrontSide","depthWrite","getObjectByName","event","clientX","currentTarget","clientWidth","clientY","clientHeight","x","y","updateProjectionMatrix","cleanup","removeEventListener","dispose","mounted","beforeUnmount"],"sources":["src/components/LicoBadge.vue"],"sourcesContent":["<template>\n  <div ref=\"threeContainer\" class=\"lico-badge three-container\"></div>\n</template>\n\n<script>\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nexport default {\n  name: \"ThreeModelViewer\",\n  data() {\n    return {\n      threejs: null,\n      scene: null,\n      camera: null,\n      mixers: [],\n      action: [],\n      playing: 0,\n      headAction: [0],\n      neckBone: null,\n      mouse: new THREE.Vector2(),\n      rafId: null,\n    };\n  },\n  methods: {\n    initialize() {\n      // Create renderer\n      this.threejs = new THREE.WebGLRenderer({\n        antialias: true,\n      });\n      this.threejs.shadowMap.enabled = true;\n      this.threejs.shadowMap.type = THREE.PCFSoftShadowMap;\n      this.threejs.setPixelRatio(window.devicePixelRatio);\n      this.threejs.setSize(window.innerWidth, window.innerHeight);\n\n      // Attach renderer to DOM\n      this.$refs.threeContainer.appendChild(this.threejs.domElement);\n\n      // Camera setup\n      const fov = 50;\n      const aspect = window.innerWidth / window.innerHeight;\n      const near = 1;\n      const far = 1000.0;\n      this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n      this.camera.position.set(0, 0.5, 2.3);\n      this.camera.lookAt(new THREE.Vector3(0, 0.6, 0));\n\n      // Scene setup\n      this.scene = new THREE.Scene();\n\n      // Lights\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 4.0);\n      directionalLight.position.set(5, 10, 7.5);\n      directionalLight.castShadow = true;\n      this.scene.add(directionalLight);\n\n      const ambientLight = new THREE.AmbientLight(0x846e62, 5.0);\n      this.scene.add(ambientLight);\n\n      // Resize listener\n      window.addEventListener(\"resize\", this.onWindowResize, false);\n\n      // Load model\n      this.loadModel();\n\n      // Mouse move listener\n      this.threejs.domElement.addEventListener(\n        \"mousemove\",\n        this.onMouseMove,\n        false\n      );\n\n\n      // Start render loop\n      this.raf();\n    },\n    loadModel() {\n      const loader = new GLTFLoader();\n      console.log(loader);\n      loader.load(\"/lico-actions-subd.glb\", (gltf) => {\n        gltf.scene.traverse((c) => {\n          if (c.material) {\n            c.material.side = THREE.FrontSide;\n            c.material.depthWrite = true;\n          }\n          c.castShadow = c.name !== \"floor\";\n        });\n\n        // this.headAction.forEach((i) => {\n        //   const idsToRemove = [];\n        //   gltf.animations[i].tracks.forEach((t, j) => {\n        //     if (t.name.includes(\"mixamorigHead.quaternion\")) {\n        //       idsToRemove.push(j);\n        //     }\n        //   });\n        //   idsToRemove.forEach((j) => {\n        //     gltf.animations[i].tracks.splice(j, 1);\n        //   });\n        // });\n\n        // const mixer = new THREE.AnimationMixer(gltf.scene);\n        // this.mixers.push(mixer);\n        // gltf.animations.forEach((element, i) => {\n        //   this.action[i] = mixer.clipAction(element);\n        // });\n        // this.action[0].play();\n        // this.playing = 0;\n\n        this.scene.add(gltf.scene);\n        this.neckBone = gltf.scene.getObjectByName(\"mixamorigHead\");\n      });\n    },\n    onMouseMove(event) {\n      // if (this.headAction.includes(this.playing)) {\n        this.mouse.set(\n          (event.clientX / event.currentTarget.clientWidth) * 2 - 1,\n          -(event.clientY / event.currentTarget.clientHeight) * 2 + 1\n        );\n        if (this.neckBone) {\n          this.neckBone.lookAt(this.mouse.x / 2, (this.mouse.y + 0.8) / 2, 1);\n        }\n      // }\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.threejs.setSize(window.innerWidth, window.innerHeight);\n    },\n    // raf() {\n    //   this.rafId = requestAnimationFrame((t) => {\n    //     this.raf();\n    //     if (this.mixers) {\n    //       const delta = t * 0.001;\n    //       this.mixers.forEach((mixer) => mixer.update(delta));\n    //     }\n    //     this.threejs.render(this.scene, this.camera);\n    //   });\n    // },\n    cleanup() {\n      // cancelAnimationFrame(this.rafId);\n      window.removeEventListener(\"resize\", this.onWindowResize);\n      this.threejs.domElement.removeEventListener(\n        \"mousemove\",\n        this.onMouseMove\n      );\n      this.threejs.dispose();\n      this.scene = null;\n      this.camera = null;\n      this.mixers = [];\n    },\n  },\n  mounted() {\n    this.initialize();\n  },\n  beforeUnmount() {\n    this.cleanup();\n  },\n};\n</script>\n\n<style>\n.three-container {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}