{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.to-array.js\";\nimport { Curve, Vector3, Vector4 } from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n  constructor(degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */) {\n    super();\n    const knotsLength = knots ? knots.length - 1 : 0;\n    const pointsLength = controlPoints ? controlPoints.length : 0;\n    this.degree = degree;\n    this.knots = knots;\n    this.controlPoints = [];\n    // Used by periodic NURBS to remove hidden spans\n    this.startKnot = startKnot || 0;\n    this.endKnot = endKnot || knotsLength;\n    for (let i = 0; i < pointsLength; ++i) {\n      // ensure Vector4 for control points\n      const point = controlPoints[i];\n      this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n    }\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]); // linear mapping t->u\n\n    // following results in (wx, wy, wz, w) homogeneous point\n    const hpoint = NURBSUtils.calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n    if (hpoint.w !== 1.0) {\n      // project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n      hpoint.divideScalar(hpoint.w);\n    }\n    return point.set(hpoint.x, hpoint.y, hpoint.z);\n  }\n  getTangent(t, optionalTarget = new Vector3()) {\n    const tangent = optionalTarget;\n    const u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n    const ders = NURBSUtils.calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n    tangent.copy(ders[1]).normalize();\n    return tangent;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.degree = this.degree;\n    data.knots = [...this.knots];\n    data.controlPoints = this.controlPoints.map(p => p.toArray());\n    data.startKnot = this.startKnot;\n    data.endKnot = this.endKnot;\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.degree = json.degree;\n    this.knots = [...json.knots];\n    this.controlPoints = json.controlPoints.map(p => new Vector4(p[0], p[1], p[2], p[3]));\n    this.startKnot = json.startKnot;\n    this.endKnot = json.endKnot;\n    return this;\n  }\n}\nexport { NURBSCurve };","map":{"version":3,"names":["Curve","Vector3","Vector4","NURBSUtils","NURBSCurve","constructor","degree","knots","controlPoints","startKnot","endKnot","knotsLength","length","pointsLength","i","point","x","y","z","w","getPoint","t","optionalTarget","u","hpoint","calcBSplinePoint","divideScalar","set","getTangent","tangent","ders","calcNURBSDerivatives","copy","normalize","toJSON","data","map","p","toArray","fromJSON","json"],"sources":["/Users/taosthira/Works/Mascot/lico-badge/lico-badge/node_modules/three/examples/jsm/curves/NURBSCurve.js"],"sourcesContent":["import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tconst knotsLength = knots ? knots.length - 1 : 0;\n\t\tconst pointsLength = controlPoints ? controlPoints.length : 0;\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || knotsLength;\n\n\t\tfor ( let i = 0; i < pointsLength; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.degree = this.degree;\n\t\tdata.knots = [ ...this.knots ];\n\t\tdata.controlPoints = this.controlPoints.map( p => p.toArray() );\n\t\tdata.startKnot = this.startKnot;\n\t\tdata.endKnot = this.endKnot;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.degree = json.degree;\n\t\tthis.knots = [ ...json.knots ];\n\t\tthis.controlPoints = json.controlPoints.map( p => new Vector4( p[ 0 ], p[ 1 ], p[ 2 ], p[ 3 ] ) );\n\t\tthis.startKnot = json.startKnot;\n\t\tthis.endKnot = json.endKnot;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { NURBSCurve };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}